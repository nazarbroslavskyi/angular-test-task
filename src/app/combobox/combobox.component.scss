ul.acxbox-listbox[role='listbox']{
  position: absolute;
  list-style: none;
  background-color: #fff;
  font-size: 1em;
  margin: 0;
   border-radius: 0px 0px 5px 5px;
  width: 92%;
  height:auto;
  min-height:100px;
  max-height: 200px;
  z-index: 100;
  overflow-x: hidden;
  overflow-y: auto;
  padding: 3px 6px;
  border:1px solid #716b6b;

}

ul.acxbox-listbox[role='listbox'] li[role='option']{
  cursor: pointer;
}

ul.acxbox-listbox[role='listbox'] li[role='option']:hover{
  background-color: grey;
  color: #FFF;
}

ul.acxbox-listbox[role='listbox'] li[role='option'][aria-selected='true']{
  background-color: rgba(59, 133, 230, 0.623);
  color: #FFF;
}
ul.acxbox-listbox[role='listbox'] li[role='option'][data-activedescendant='true']{
  background-color: grey;
  color: #FFF;
}

.btn-outline-secondary {
  padding: 10px;
  background-color: red;
}



// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.input-group {
  position: relative;
  display: flex;
  flex-wrap: wrap; // For form validation feedback
  align-items: stretch;
  width: 100%;

  > .form-control,
  > .form-control-plaintext,
  > .custom-select,
  > .custom-file {
    position: relative; // For focus state's z-index
    flex: 1 1 auto;
    // Add width 1% and flex-basis auto to ensure that button will not wrap out
    // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
    width: 1%;
    margin-bottom: 0;

    + .form-control,
    + .custom-select,
    + .custom-file {
      margin-left: 2px;
    }
  }

  // Bring the "active" form control to the top of surrounding elements
  > .form-control:focus,
  > .custom-select:focus,
  > .custom-file .custom-file-input:focus ~ .custom-file-label {
    z-index: 3;
  }

  // Bring the custom file input above the label
  > .custom-file .custom-file-input:focus {
    z-index: 4;
  }

  > .form-control,
  > .custom-select {
    &:not(:last-child) { border-radius: 2px; }
    &:not(:first-child) { border: 2px; }
  }

  // Custom file inputs have more complex markup, thus requiring different
  // border-radius overrides.
  > .custom-file {
    display: flex;
    align-items: center;

    &:not(:last-child) .custom-file-label,
    &:not(:last-child) .custom-file-label::after { border-radius: 2px; }
    &:not(:first-child) .custom-file-label { border-radius: 2px; }
  }
}


// Prepend and append
//
// While it requires one extra layer of HTML for each, dedicated prepend and
// append elements allow us to 1) be less clever, 2) simplify our selectors, and
// 3) support HTML5 form validation.

.input-group-prepend,
.input-group-append {
  display: flex;

  // Ensure buttons are always above inputs for more visually pleasing borders.
  // This isn't needed for `.input-group-text` since it shares the same border-color
  // as our inputs.
  .btn {
    position: relative;
    z-index: 2;

    &:focus {
      z-index: 3;
    }
  }

  .btn + .btn,
  .btn + .input-group-text,
  .input-group-text + .input-group-text,
  .input-group-text + .btn {
    margin-left: 2px;
  }
}

.input-group-prepend { margin-right: 2px }
.input-group-append { margin-left: 2px; }


// Textual addons
//
// Serves as a catch-all element for any text or radio/checkbox input you wish
// to prepend or append to an input.

.input-group-text {
  display: flex;
  align-items: center;
  padding: 2px 2px;
  margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
  text-align: center;
  white-space: nowrap;


  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }
}

